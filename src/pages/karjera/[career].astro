---
import { getCollection, render } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';

// Eksportuojame getStaticPaths funkciją, kuri generuoja dinaminius puslapius
export async function getStaticPaths() {
  const careers = await getCollection('careers');
  return careers.map((career) => ({
    params: { career: career.id },
    props: { career },
  }));
}

// Gauname career parametrą iš Astro.params ir props
const { career } = Astro.params;
const { career: careerData } = Astro.props;

// Patikriname, ar careerData egzistuoja
if (!careerData) {
  throw new Error(`Karjera su ID ${career} nerasta.`);
}

// Markdown turinio atvaizdavimas
const { title, description, location, applyLink } = careerData.data;
const { Content } = await render(careerData);
---

<MainLayout>
  <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-12 bg-[#F7F9FB] rounded-lg">
    <!-- Antraštė -->
    <h1 class="text-3xl sm:text-4xl font-bold text-gray-900 mb-4 tracking-tight">{title}</h1>
    <p class="text-lg text-gray-600 mb-6 leading-relaxed">{description}</p>    <p class="text-base text-gray-500 mb-8 flex items-center">
      <svg class="w-5 h-5 mr-2 text-[#3C7099]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.828 0l-4.243-4.243a8 8 0 1111.314 0z"></path>
      </svg>
      Vieta: {location}
    </p>

    <!-- Markdown turinys -->
    <div class="prose prose-lg prose-gray max-w-none mb-8 text-gray-700 prose-headings:text-gray-900 prose-headings:font-semibold prose-ul:list-disc prose-li:mb-1">
      <Content />
    </div>

    <!-- Kandidatavimo nuoroda -->
    <a
      href={applyLink}
      class="inline-block rounded-lg bg-[#3C7099] px-6 py-2.5 text-white font-medium shadow-sm hover:bg-[#2a5a7c] transition duration-150 ease-in-out"
      target="_blank"
      rel="noopener noreferrer"
    >
      Kandidatuoti
    </a>
  </div>
</MainLayout>