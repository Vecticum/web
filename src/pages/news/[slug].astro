---
import { getCollection, render } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

export async function getStaticPaths() {
  const newsItems = await getCollection("news");
  return newsItems.map((item) => ({
    params: { slug: item.id },
    props: item,
  }));
}

const newsItem = Astro.props;
const { Content } = await render(newsItem);

// Get related news (excluding current one)
const allNews = await getCollection("news");
const relatedNews = allNews
  .filter((item) => item.id !== newsItem.id)
  .sort(() => Math.random() - 0.5)
  .slice(0, 3);
---

<MainLayout title={newsItem.data.title} description={newsItem.data.description}>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12">
    <div class="mb-6">
      <a
        href="/news"
        class="text-accent hover:text-accent-dark flex items-center"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5 mr-1"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z"
            clip-rule="evenodd"></path>
        </svg>
        Grįžti į naujienas
      </a>
    </div>

    <h1 class="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">
      {newsItem.data.title}
    </h1>

    <div class="text-gray-600 mb-6">
      <FormattedDate date={newsItem.data.pubDate} />
      {
        newsItem.data.updatedDate && (
          <span>
            {" "}
            · Atnaujinta: <FormattedDate date={newsItem.data.updatedDate} />
          </span>
        )
      }
    </div>

    <img
      src={newsItem.data.image}
      alt={newsItem.data.title}
      class="w-full h-64 sm:h-80 object-cover rounded-lg mb-8"
    />

    <div class="prose prose-lg max-w-none">
      <Content />
    </div>
  </div>

  {
    relatedNews.length > 0 && (
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 border-t border-gray-200">
        <h2 class="text-2xl font-semibold mb-6">Susijusios naujienos</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {relatedNews.map((item) => (
            <a
              href={`/news/${item.id}`}
              class="group flex flex-col border border-gray-200 rounded-lg overflow-hidden bg-white shadow-md hover:shadow-lg transition-shadow duration-300"
            >
              <div class="h-48 overflow-hidden">
                <img
                  src={item.data.image}
                  alt={item.data.title}
                  class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                />
              </div>
              <div class="p-4">
                <h3 class="text-lg font-semibold text-gray-900">
                  {item.data.title}
                </h3>
                <div class="text-sm text-gray-500 mt-1">
                  <FormattedDate date={item.data.pubDate} />
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    )
  }
</MainLayout>
